android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "com.matthiasleeb.iLuma"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17"
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.22.1"  // or your cmake version
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            def apkName = "${variant.name}.apk"
            outputFileName = apkName

            // Redirect output file path
            def outputDir = new File(rootProject.projectDir, "../build/android")
            if (!outputDir.exists()) {
                outputDir.mkdirs()
            }
            outputFile = new File(outputDir, apkName)
        }
    }
}

afterEvaluate {
    android.applicationVariants.all { variant ->
        def variantName = variant.name.capitalize()
        def copyTaskName = "copy${variantName}Apk"

        tasks.create(name: copyTaskName, type: Copy) {
            def apkFolder = file("$buildDir/outputs/apk/${variant.name}")
            def apkFile = apkFolder.listFiles().find { it.name.endsWith(".apk") }

            from apkFolder
            include "*.apk"
            into "$rootDir/../build/android"
            doLast {
                println "Copied APK to ../build/android"
            }
        }

        tasks["assemble${variantName}"].finalizedBy(tasks[copyTaskName])
    }
}
